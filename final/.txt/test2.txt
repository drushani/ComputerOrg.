// add	  $s2   $s0   $s2
// opcode rs    rt    rd    shamt funct
// 000000 10010 10000 10010 00000 100000
// 0      18    16    18    0     32
// 0000 0010 0101 0000 1001 0000 0010 0000
// 0    2    5    0    9    0    2    0
20
90
50
02
// sub	  $s2   $s0   $s2
// opcode rs    rt    rd    shamt funct
// 000000 10010 10000 10010 00000 100010
// 0      18    16    18    0     34
// 0000 0010 0101 0000 1001 0000 0010 0010
// 0    2    5    0    9    0    2    2 
22
90
50
02
// and    $s1   $s3   $s1   
// opcode rs    rt    rd    shamt funct
// 000000 10001 10011 10001 00000 100100
// 0      17    19    17    0     36
// 0000 0010 0011 0011 1000 1000 0010 0100
// 0    2    3    3    8    8    2    4
24
88
33
02
// or	  $s1   $s3   $s1
// opcode rs    rt    rd    shamt funct
// 000000 10001 10011 10001 00000 100101
// 0      17    19    17    0     37
// 0000 0010 0011 0011 1000 1000 0010 0101
// 0    2    3    3    8    8    2    5
25
88
33
02
// slt    $s1   $s1   $s2
// opcode rs    rt    rd    shamt funct
// 000000 10001 10001 10010 00000 101010
// 0      17    17    18    0     42
// 0000 0010 0011 0001 1001 0000 0010 1010
// 0    2    3    1    9    0    2    A
2A
90
31
02
// srl          $s0   $s1   4     
// opcode rs    rt    rd    shamt funct 
// 000000 00000 10000 10001 00100 000010
// 0      0     16    17    4     2
// 0000 0000 0001 0000 1000 1001 0000 0010
// 0    0    1    0    8    9    0    2
02
89
10
00